# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.2

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            # Also install CircleCI-specific testing requirements,
            # like `nose`
            pip install -r .circleci/requirements_testing.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            # Discover all tests, run them, and store the results in
            # JUnit-style XML readable by CircleCI.
            nosetests --with-xunit --xunit-file=./.circleci/test-results/main/results.xml

      # Tell CircleCI where JUnit-style XML files storing test results
      # are stored. This lets it show richer analytics.
      - store_test_results:
          path: ./.circleci/test-results

      # Store raw XML of test results as artifacts:
      - store_artifacts:
          path: ./.circleci/test-results